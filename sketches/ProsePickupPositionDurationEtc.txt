HasPosition vs HasDuration

Rest/Note/Chord
Voice
    Duration but no position
    Delay has no effect
    Can not have reset/pickup (as this is a concept that has to do with position)
    This is a form of vector: sequential catenation adds durations (and "appends"
    the underlying media, whatever that means)
    
Delayed a
    Has duration if a has duration
    Defines *some* position: onset, offset or some other local duration.
    All other durations are computed w.r.t. duration of the underlaying value (what does this mean?)
    
Chord = [Delayed a]
    Two ways of looking at it:
        1) The time values in delayed "moves" the contained value
        2) The local origin of the contained value is moved

Think of it as vector/point addition
Notes and Voices are like vectors: they have no "location"
    However they might have a notion of a "local origin", typically shorter than itself.

    <-        duration        ->
    <- pickUp -> | <- putDown ->

    They might also have two origins, one on, one off, a la TPTM.
    
    <- pickup -> ON <- sound -> OFF <- putDown ->
    
    More generally, they may have an function from "nominal" duration (0 = on, 1 = off)
    to local duration (i.e. difference between nominal on sounding position).
    This generalizes what Hudak calls ? in TPTM.
    
You can add them up any way.

Note that music21's streams is essentially Stream a = [Delayed a]
They even provide Monadic join, called "flatten"

    http://www.flexatone.org/static/docs/music21Stream.pdf

TODO
    Finalize our view on Chords, Transformable/HasPosition/HasDuration and their associated laws!


PTM
    data Primitive a = Note a Duration |Â Rest Duration  -- actual duration
    data Music = 
        Prim (Primitive a)
        Seq (Music a) (Music a)
        Par (Music a) (Music a)
        Modify ... (Music a) -- tempo, transposition, instrument, dynamics/phrasing, player

TPTM
    -- see PTM above
    data Tile a = Tile Duration Duration (Music a)      -- pre post music, logical duration = post - pre

Lilypond:
    -- Simplified
    Music
        = Chord [Note] Duration
        | Sequential [Music]
        | Simultaneous Bool [Music]

Humdrum/GUIDO model:
    Score = [Voice]                         -- parallel composition
    Voice = [RestNoteChord]                 -- sequential composition
    RestNoteChord = ([Pitch], Duration)     -- parallel composition

music21 model:
    Stream a = [Delayed a]                  -- parallel with offsets
    Note = (Duration, a)
    Chord = (Duration, [a])
    Rest = Duration
    -- Generally
    Score = Stream Part -- "parallel"
    Part = Stream Measure -- "sequential"
    Measure = Stream Measure -- "parallel"
    Voice = Stream (Either Rest (Either Note Chord)) -- "sequential"
    
Abjad model:



